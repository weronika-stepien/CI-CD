pipeline {
    agent any 
    
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
        DOCKER_IMAGE = "weronikastepien/cicd-todo:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Check out the source code from the main branch
                git credentialsId: 'github-id', 
                    url: 'https://github.com/weronika-stepien/CI-CD.git',
                    branch: 'main'
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    // Navigate to the directory where the Dockerfile is located
                    dir('CI_CD-Python-WebApp-ToDoList/ToDo') {
                        // Build the Docker image
                        sh '''
                        echo 'BUILD DOCKER IMAGE'
                        docker build -t ${DOCKER_IMAGE} -f Dockerfile .
                        '''

                        // Log in to Docker using credentials
                        sh "echo ${REGISTRY_CREDENTIALS_PSW} | docker login -u ${REGISTRY_CREDENTIALS_USR} --password-stdin"

                        // Push the Docker image
                        sh "docker push ${DOCKER_IMAGE}"
                    }
                }
            }
        }

        stage('Checkout K8S Manifest') {
            steps {
                // Check out the repository again to access Kubernetes manifests
                git credentialsId: 'github-id', 
                    url: 'https://github.com/weronika-stepien/CI-CD.git',
                    branch: 'main'
            }
        }

        stage('Update K8S Manifest & Push Changes') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-id', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        // Navigate to the directory containing the Kubernetes manifest files
                        dir('CI_CD-Python-WebApp-ToDoList/ToDo_Manifests') {
                            sh '''
                            cat minikube-todo-deploy.yaml
                	        sed -i "s/32/${BUILD_NUMBER}/g" minikube-todo-deploy.yaml
                	        cat minikube-todo-deploy.yaml
                	        git add minikube-todo-deploy.yaml
                	        git commit -m "chore: update minikube-todo-deploy.yaml with build number ${BUILD_NUMBER}"
                	        git remote -v 
                	        git push https://github.com/weronika-stepien/CI-CD.git HEAD:main
                            '''                        
                        }
                    }
                }
            }
        }
    }
}

